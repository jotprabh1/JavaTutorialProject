<resources>
    <string name="app_name">Java Tutorials</string>
    <string name="action_settings">Settings</string>
    <string name="title_activity_two">Java Programs</string>
    <string name="title_activity_introduction">1. Introduction</string>
    <string name="title_activity_features">2. Features</string>
    <string name="intro">&lt;p&gt;Java is a simple and yet powerful object oriented programming language and it is in many respects similar to C++.&lt;/p&gt;&lt;p&gt;Java was created by James Gosling from &lt;b&gt;Sun Microsystems (Sun) in 1991.&lt;/b&gt; The first publicly available version of Java (Java 1.0) was released in 1995.&lt;/p&gt;&lt;p&gt;Java is defined by a specification and consists of a programming language, a compiler, core libraries and a runtime machine (Java Virtual Machine). The Java runtime allows software developers to write program code in other languages than the Java programming language which still runs on the Java virtual machine.&lt;br&gt;The Java platform is usually associated with the Java virtual machine and the Java core libraries.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Java Virtual Machine&lt;/b&gt;&lt;br&gt;The Java virtual machine(JVM) is a software implementation of a computer that executes programs like a real machine.&lt;/p&gt;&lt;b&gt;JVM&lt;/b&gt;&lt;p&gt;JVM (Java Virtual Machine) is an abstract machine. It is a specification that provides runtime environment in which java bytecode can be executed.&lt;/p&gt;&lt;p&gt;JVMs are available for many hardware and software platforms. JVM, JRE and JDK are platform dependent because configuration of each OS differs. But, Java is platform independent.&lt;/p&gt;&lt;p&gt;The JVM performs following main tasks:&lt;br&gt;1.Loads code&lt;br&gt;2.Verifies code&lt;br&gt;3.Executes code&lt;br&gt;4.Provides runtime environment&lt;/p&gt;</string>
    <string name="features">&lt;h4&gt;1.Simple:&lt;/h4&gt;Java is easy to learn and its syntax is quite simple and easy to understand.&lt;br&gt;&lt;h4&gt;2.Object Oriented&lt;/h4&gt;Object-oriented means we organize our software as a combination of different types of objects that incorporates both data and behaviour. Object-oriented programming(OOPs) is a methodology that simplify software development and maintenance by providing some rules.&lt;br&gt;&lt;h4&gt;3. Platform Independent&lt;/h4&gt;Java code can be run on multiple platforms e.g. Windows, Linux, Sun Solaris, Mac/OS etc. Java code is compiled by the compiler and converted into bytecode. This bytecode is a platform-independent code because it can be run on multiple platforms i.e. Write Once and Run Anywhere(WORA).&lt;br&gt;&lt;h4&gt;4. Robust&lt;/h4&gt;Robust simply means strong. Java uses strong memory management. There are lack of pointers that avoids security problem. There is automatic garbage collection in java. There is exception handling and type checking mechanism in java. All these points makes java robust.</string>
    <string name="pros">&lt;h4&gt;Pros:&lt;/h4&gt;1.Java is Simple&lt;br&gt;2.Java is object-oriented because programming in Java is centered on creating objects, manipulating objects, and making objects work together. This allows you to create modular programs and reusable code.&lt;br&gt;3. One of the most significant advantages of Java is Platform independence.&lt;br&gt;4. Java is Secure: Java is one of the first programming languages to consider security as part of its design.&lt;br&gt;5. Java is Multithreaded: Multithreaded is the capability for a program to perform several tasks simultaneously within a program.&lt;br&gt;&lt;br&gt;&lt;h4&gt;Cons:&lt;/h4&gt;&lt;br&gt;1. Java can be perceived as significantly slower and more memory-consuming than natively compiled languages such as C or C++.&lt;br&gt;2. No local constants. In Java, variables that belong to a class can be made constant by declaring them to be final. However, variables that are local to a method cannot be declared final.</string>
    <string name="environment">We need to install the Java Development Toolkit aka JDK, which is bundled with the Java Runtime Environment.&lt;br&gt;At this moment, the latest JDK version is JDK 8.&lt;br&gt;All you have to do is head to the main download page provided by Oracle, and download the latest version that you will find.&lt;br&gt;&lt;br&gt;Follow the instructions to download java and run the .exe to install Java on your machine. Once you installed Java on your machine, you would need to set environment variables to point to correct installation directories.&lt;br&gt;&lt;br&gt;Assuming you have installed Java in C:\Program Files\java\jdk&lt;br&gt;1. Right-click on &lt;b&gt;\'My Computer\'&lt;/b&gt; and select &lt;b&gt;\'Properties\'&lt;/b&gt;&lt;br&gt;2. Click on the &lt;b&gt;\'Environment variables\'&lt;/b&gt; button under the &lt;b&gt;\'Advanced\'&lt;/b&gt; tab.&lt;br&gt;3. Now, alter the &lt;b&gt;\'Path\'&lt;/b&gt; variable so that it also contains the path to the Java executable.</string>
    <string name="title_activity_prosand_cons">3. Pros and Cons</string>
    <string name="title_activity_environment_setup">4. Environment Setup</string>
    <string name="activity_first_program">5. First Program</string>
    <string name="first_program">&lt;i&gt;class Simple{&lt;br&gt;public static void main(String args[]){&lt;br&gt;System.out.println(\"Hello Java\");&lt;br&gt;}&lt;br&gt;}&lt;/i&gt;&lt;br&gt;&lt;br&gt;save this file as Simple.java&lt;br&gt;&lt;b&gt;To compile:&lt;/b&gt; javac Simple.java&lt;br&gt;&lt;b&gt;To execute:&lt;/b&gt; java Simple&lt;br&gt;It will give output as &lt;b&gt;Hello Java&lt;/b&gt;&lt;br&gt;&lt;br&gt;Lets see what this is:&lt;br&gt;&lt;b&gt;class&lt;/b&gt; keyword is used to declare a class in java.&lt;br&gt;&lt;br&gt;&lt;b&gt;public&lt;/b&gt; keyword is an access modifier which represents visibility, it means it is visible to all.&lt;br&gt;&lt;br&gt;&lt;b&gt;static&lt;/b&gt; is a keyword, if we declare any method as static, it is known as static method. The main method is executed by the JVM, it doesn\'t require to create object to invoke the main method. So, it saves memory.&lt;br&gt;&lt;br&gt;&lt;b&gt;void&lt;/b&gt; is the return type of method, it means it doesn\'t return any value.&lt;br&gt;&lt;br&gt;&lt;b&gt;main&lt;/b&gt; is an entry point of the program. Execution of programs starts from main. It is called by Runtime System.&lt;br&gt;&lt;br&gt;&lt;b&gt;String[] args&lt;/b&gt; is used for command line argument. We will learn it later.&lt;br&gt;&lt;br&gt;&lt;b&gt;System.out.println()&lt;/b&gt; is used to print any statement.</string>
    <string name="activity_variables">6. Variables</string>
    <string name="variables">A variable provides us with named storage that our programs can manipulate. Each variable in Java has a specific type, which determines the size and layout of the variable\'s memory; the range of values that can be stored within that memory; and the set of operations that can be applied to the variable.&lt;br&gt;&lt;br&gt;You must declare all variables before they can be used.&lt;br&gt;The basic form of a variable declaration is shown here:&lt;br&gt;&lt;i&gt;data_type variable = value;&lt;/i&gt;&lt;br&gt;&lt;br&gt;Here data type is one of Java\'s datatypes and variable is the name of the variable. To declare more than one variable of the specified type, you can use a comma-separated list.&lt;br&gt;&lt;br&gt;Following are valid examples of variable declaration and initialization in Java:&lt;br&gt;&lt;i&gt;int a,b,c;&lt;br&gt;//Declare three variables a, b and c of type integer&lt;/i&gt;</string>
    <string name="activity_2D_array">1. 2D Array Example</string>
    <string name="twoD_array">class TwoDArray&lt;br&gt;{&lt;br&gt;public static void main(String args[]) {&lt;br&gt;int twoD[][]=new int[4][5];&lt;br&gt;int k=0,i,j;&lt;br&gt;for(i=0;i&lt;4;i++)&lt;br&gt;for(j=0;j&lt;5;j++)&lt;br&gt;{&lt;br&gt;twoD[i][j]=k;&lt;br&gt;k++;&lt;br&gt;}&lt;br&gt;for(i=0;i&lt;4;i++)&lt;br&gt;{&lt;br&gt;for(j=0;j&lt;5;j++)&lt;br&gt;System.out.print(twoD[i][j]+\" \");&lt;br&gt;System.out.println();&lt;br&gt;}&lt;br&gt;}&lt;br&gt;}&lt;br&gt;&lt;h4&gt;Program Output:&lt;/h4&gt;0 1 2 3 4&lt;br&gt;5 6 7 8 9&lt;br&gt;10 11 12 13 14&lt;br&gt;15 16 17 18 19</string>
    <string name="Addition">import java.util.Scanner;&lt;br&gt;&lt;br&gt;class AddNumbers&lt;br&gt;{&lt;br&gt;public static void main(String args[])&lt;br&gt;{&lt;br&gt;int x,y,z;&lt;br&gt;&lt;br&gt;System.out.println(\"Enter two integers to calculate their sum\");&lt;br&gt;Scanner s = new Scanner(System.in);&lt;br&gt;&lt;br&gt;x=s.nextInt();&lt;br&gt;y=s.nextInt();&lt;br&gt;z = x + y;&lt;br&gt;System.out.println(\"Sum of entered integers = \"+z);&lt;br&gt;}&lt;br&gt;}&lt;br&gt;&lt;h4&gt;Program Output:&lt;/h4&gt;Enter two integers to calculate their sum&lt;br&gt;4&lt;br&gt;5&lt;br&gt;Sum of entered integers = 9</string>
    <string name="activity_Addition">2. Addition</string>
    <string name="activity_area_circle">3. Area of Circle</string>
    <string name="area_circle">import java.io.BufferedReader;&lt;br&gt;import java.io.IOException;&lt;br&gt;import java.io.InputStreamReader;&lt;br&gt;&lt;br&gt;public class CircleArea {&lt;br&gt;&lt;br&gt;public static void main(String[] args) {&lt;br&gt;&lt;br&gt;int radius =0;&lt;br&gt;System.out.println(\"Please enter radius of a circle\");&lt;br&gt;&lt;br&gt;try&lt;br&gt;{&lt;br&gt;//get the radius from console&lt;br&gt;BufferdReader br = new BufferedReader(new InputStreamReader(System.in));&lt;br&gt;radius = Integer.parseInt(br.readLine());&lt;br&gt;}&lt;br&gt;//if invalid value was entered&lt;br&gt;catch(NumberFormatException ne)&lt;br&gt;{&lt;br&gt;System.out.println(\"Invalid radius value\" + ne);&lt;br&gt;System.exit(0);&lt;br&gt;}&lt;br&gt;catch(IOException ioe)&lt;br&gt;{&lt;br&gt;System.out.println(\"IO Error: \"+ioe);&lt;br&gt;System.exit(0);&lt;br&gt;}&lt;br&gt;&lt;br&gt;double area = Math.PI * radius * radius;&lt;br&gt;&lt;br&gt;System.out.println(\"Area of Circle is \" + area);&lt;br&gt;}&lt;br&gt;}&lt;br&gt;&lt;h4&gt;Program Output&lt;/h4&gt;Please enter radius of a circle&lt;br&gt;19&lt;br&gt;Area of a Circle is 1134.1149479459152</string>
    <string name="activity_Area_Rectangle">4. Area of Rectangle</string>
    <string name="area_rect">import java.io.BufferedReader;&lt;br&gt;import java.io.IOException;&lt;br&gt;import java.io.InputStreamReader;&lt;br&gt;&lt;br&gt;public class RectArea{&lt;br&gt;&lt;br&gt;public static void main(String[] args) {&lt;br&gt;&lt;br&gt;int width = 0;&lt;br&gt;int length = 0;&lt;br&gt;&lt;br&gt;try&lt;br&gt;{&lt;br&gt;//read the length from console&lt;br&gt;BufferedReader br = new BufferedReader(new InputStreamReader(System.in));&lt;br&gt;&lt;br&gt;System.out.println(\"Please enter length of rectangle\");&lt;br&gt;length=Integer.parseInt(br.readline());&lt;br&gt;&lt;br&gt;//read the width from console&lt;br&gt;System.out.println(\"Please enter width of rectangle\");&lt;br&gt;width = Integer.parseInt(br.readLine());&lt;br&gt;&lt;br&gt;}&lt;br&gt;catch(NumberFormatException ne)&lt;br&gt;{&lt;br&gt;System.out.println(\"Invalid value\" + ne);&lt;br&gt;System.exit(0);&lt;br&gt;}&lt;br&gt;catch(IOException ioe)&lt;br&gt;{&lt;br&gt;System.out.println(\"IO Error:\" + ioe);&lt;br&gt;System.exit(0);&lt;br&gt;}&lt;br&gt;int area = length * width;&lt;br&gt;&lt;br&gt;System.out.println(\"Area of rectangle is \" + area);&lt;br&gt;}&lt;br&gt;&lt;br&gt;}&lt;br&gt;Program Output :&lt;br&gt;Please enter length of rectangle&lt;br&gt;10&lt;br&gt;Please enter width of rectangle&lt;br&gt;15&lt;br&gt;Area of rectangle is 150</string>
    <string name="activity_Array_copy">5. Array Copy</string>
    <string name="Array_copy">class ArrayCopy&lt;br&gt;{&lt;br&gt;public static void main(String args[])&lt;br&gt;{&lt;br&gt;int A1[]={10,20,30,40,50,60,70,80,90,100};&lt;br&gt;int A2[]={1,2,3,4,5,6,7,8,9,10};&lt;br&gt;&lt;br&gt;System.out.println(\"The First Array is:\");&lt;br&gt;for(int i=0;i&lt;10;i++)&lt;br&gt;System.out.println(A1[i]+\" \");&lt;br&gt;&lt;br&gt;System.out.println(\"The Second Array is:\");&lt;br&gt;for(int i=0;i&lt;10;i++)&lt;br&gt;System.out.print(A2[i]+\" \");&lt;br&gt;&lt;br&gt;System.arraycopy(A1,5,A2,5,5);&lt;br&gt;&lt;br&gt;System.out.println(\"The second array after calling arraycopy():\");&lt;br&gt;for(int i=0;i&lt;10;i++)&lt;br&gt;System.out.print(A2[i]+\" \");&lt;br&gt;}&lt;br&gt;}&lt;br&gt;&lt;h4&gt;Program Output:&lt;/h4&gt;The first Array is:&lt;br&gt;10 20 30 40 50 60 70 80 90 100&lt;br&gt;&lt;br&gt;The second Array is:&lt;br&gt;1 2 3 4 5 6 7 8 9 10&lt;br&gt;&lt;br&gt;The second Array after calling arraycopy():&lt;br&gt;1 2 3 4 5 60 70 80 90 100</string>
    <string name="activity_average_array">6. Average of Array</string>
    <string name="average_array">public class ArrayAverage{&lt;br&gt;&lt;br&gt;public static void main(String[] args){&lt;br&gt;&lt;br&gt;int[] numbers = new int[]{10,20,15,25,16,60,100};&lt;br&gt;&lt;br&gt;//calculate sum of all array elements&lt;br&gt;int sum = 0;&lt;br&gt;&lt;br&gt;for(int i=0;i&lt;numbers.length;i++)&lt;br&gt;sum=sum+numbers[i];&lt;br&gt;&lt;br&gt;//calculate average value&lt;br&gt;double average = sum/numbers.length;&lt;br&gt;&lt;br&gt;System.out.println(\"Average value of array elements is :\"+average);&lt;br&gt;}&lt;br&gt;}&lt;br&gt;&lt;h4&gt;Program Output:&lt;/h4&gt;Average value of array elements is : 35.0</string>
</resources>
